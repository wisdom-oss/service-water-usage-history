name: "Go Tests"
on: [pull_request]

env:
  PG_HOST: ${{ secrets.TESTS_PG_HOST }}
  PG_USER: ${{ secrets.TESTS_PG_USER }}
  PG_PASS: ${{ secrets.TESTS_PG_PASS }}

jobs:
  test:
    name: Run Tests
    runs-on: self-hosted
    permissions:
      checks: write
      pull-requests: write
      issues: read
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialize Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report/v2@latest

      - name: Run Tests
        run: go test -v 2>&1 ./... | go-junit-report > report.xml

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "report.xml"
          output: test-summary.md
        if: always()

      - id: generate-output
        run: |
          echo "COMMENT<<EOF" >> $GITHUB_OUTPUT
          cat test-summary >> $GIHUB_OUTPUT
          echo 'EOF' >> $GIHUB_OUTPUT

      - uses: actions/github-script@v7
        env:
          TEST_RESULT: ${{ steps.generate-output.outputs.comment }}
        with:
          script: |
              const {TEST_RESULT} = process.env
            
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: TEST_RESULT
              })